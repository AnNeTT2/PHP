<!--Работа с in_array-->
<!--Изучите теорию по следующим ссылкам:in_array-->
<!--Дан массив: $arr = [1, 2, 3, 4, 5];Проверьте, что в нем есть элемент со значением 3.-->

<?php
$arr = [1, 2, 3, 4, 5];
$res = in_array(3, $arr);
var_dump($res);
?>

<!--Дан массив: $arr = [1, 2, 3, 4, 5];Найдите сумму элементов данного массива. -->

<?php
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr);
?>

<!--Дан массив:$arr = [1, 2, 3, 4, 5];Найдите произведение (умножение) элементов данного массива. -->

<?php
$arr = [1, 2, 3, 4, 5];
echo array_product($arr);
?>

<!--Дан массив:$arr = [1, 2, 3, 4, 5];С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива.. -->

<?php
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr) / count($arr);
?>

<!--Работа с range-->
<!--Создайте массив, заполненный числами от 1 до 100.-->

<?php
var_dump(range(1, 100));
?>

<!--Создайте массив, заполненный буквами от 'a' до 'z'.  -->

<?php
var_dump(range('a', 'z'));
?>

<!--Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл.  -->

<?php
$arr = implode('-', range(1, 9));
print_r($arr);
?>

<!--Найдите сумму чисел от 1 до 100 не используя цикл.  -->

<?php
$arr = range(1, 100);
$sum = array_sum($arr);
echo $sum;
?>

<!--Найдите произведение чисел от 1 до 10 не используя цикл.  -->

<?php
$arr = range(1, 10);
$product = array_product($arr);
echo $product;
?>

<!--Работа с array_merge  -->
<!-- Даны массивы:$arr1 = [1, 2, 3];
	$arr2 = ['a', 'b', 'c'];Сделайте из них массив:[1, 2, 3, 'a', 'b', 'c'] -->

<?php
$arr1 = [1, 2, 3];
$arr2 = ['a', 'b', 'c'];
$res = array_merge($arr1, $arr2);
var_dump($res);
?>

<!--Работа с array_slice  -->
<!--Дан массив: $arr = [1, 2, 3, 4, 5];С помощью функции array_slice сделайте из него следующий массив:[2, 3, 4]  -->

<?php
$arr = [1, 2, 3, 4, 5];
$res = array_slice($arr, 1, 3);
var_dump($res);
?>

<!--Работа с array_splice  -->
<!--Дан массив: $arr = [1, 2, 3, 4, 5];С помощью функции array_splice сделайте из него следующий массив:[1, 4, 5]  -->

<?php
$arr = [1, 2, 3, 4, 5];
$res = array_splice($arr, 1, 3);
print_r($res);
?>

<!-- Дан массив: $arr = [1, 2, 3, 4, 5];С помощью функции array_splice сделайте из него следующий массив:[1, 2, 3, 'a', 'b', 'c', 4, 5] -->

<?php
$arr = [1, 2, 3, 4, 5];
$res = array_splice($arr, 3, 0, ['a', 'b', 'c']);
print_r($arr);
?>

<!--Дан массив : $arr = [1, 2, 3, 4, 5]; С помощью функции array_splice сделайте из него следующий массив: [1, 'a', 'b', 2, 3, 4, 'c',  5, 'e'] -->

<?php
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 1, 0, ['a', 'b']);
array_splice($arr, -1, 0, ['c']);
array_splice($arr, count($arr), 0, ['e']);
print_r($arr);
?>

<!-- Работа с array_keys, array_values, array_combine -->
<!--Дан массив:$arr = ['a' => 1, 'b' => 2, 'c' => 3];Запишите в массив $keys ключи из этого массива, а в $values – значения.  -->

<?php
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
$keys = array_keys($arr);
$values = array_values($arr);
echo '$keys = ';
print_r($keys) . 'br';
echo '$values = ';
print_r($values);
?>

<!--Дан массив:$arr1 = ['a', 'b', 'c'];
	$arr2 = [1, 2, 3];Создайте с их помощью следующий массив:['a' => 1, 'b' => 2, 'c' => 3]  -->

<?php
$arr1 = ['a', 'b', 'c'];
$arr2 = [1, 2, 3];
$res = array_combine($arr1, $arr2);
var_dump($res);
?>

<!--Работа с array_flip, array_reverse  -->
<!-- Дан массив: $arr = ['a' => 1, 'b' => 2, 'c' => 3];Поменяйте в нем местами ключи и значения. -->

<?php
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
print_r(array_flip($arr));
?>

<!-- Дан массив:$arr = [1, 2, 3, 4, 5];Сделайте из него следующий массив:	[5, 4, 3, 2, 1] -->

<?php
$arr = [1, 2, 3, 4, 5];
print_r(array_reverse($arr));
?>

<!--Работа с array_search-->
<!-- Дан массив: 	$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];Найдите позицию первого элемента '-'.-->

<?php
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$key = array_search('-', $arr);
echo 'key = ' . $key;
?>

<!--Дан массив: $arr = ['a', '-', 'b', '-', 'c', '-', 'd'];Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice. -->

<?php
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
?>

<!--Работа с array_replace -->
<!--Дан массив:$arr = ['a', 'b', 'c', 'd', 'e'];Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'. -->

<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
$res = array_replace($arr, [0 => '!', 3 => '!!']);
var_dump($res);
?>

<!-- Работа с сортировку-->
<!--Дан массив: $arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];Попробуйте на нем различные типы сортировок. -->

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
sort($arr);// по возрастанию элементов
print_r($arr);
?>

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
rsort($arr);// по убыванию элементов
print_r($arr);
?>

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
asort($arr);// по возрастанию элементов с сохранением ключей
print_r($arr);
?>

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
arsort($arr);// по убыванию элементов с сохранением ключей
print_r($arr);
?>

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
ksort($arr);// по возрастанию ключей
print_r($arr);
?>

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
krsort($arr);// по убыванию ключей
print_r($arr);
?>

<?php

function sort_array($a, $b)
{
    if ($a == $b) {
        return 0;
    }
    if ($a < $b) {
        return -1;
    } else {
        return 1;
    }
}

$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
usort($arr, 'sort_array');// по функции по элементам
print_r($arr);
?>

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
uasort($arr, 'sort_array');// по функции по элементам с сохранением ключей
print_r($arr);
?>

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
uksort($arr, 'sort_array');// по функции по ключам
print_r($arr);
?>

<?php
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
natsort($arr);// натуральная сортировка
print_r($arr);
?>

<!-- Работа с array_rand-->
<!--Дан массив: $arr = ['a' => 1, 'b' => 2, 'c' => 3];Выведите на экран случайный ключ из данного массива. -->

<?php
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
echo array_rand($arr);

?>

<!-- Дан массив:$arr = ['a' => 1, 'b' => 2, 'c' => 3];Выведите на экран случайный элемент данного массива.-->

<?php
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
$key = array_rand($arr);
echo $arr[$key];
?>

<!--Работа с shuffle -->
<!-- Дан массив:$arr = [1, 2, 3, 4, 5];Перемешайте его элементы в случайном порядке.-->

<?php
$arr = [1, 2, 3, 4, 5];
$res = shuffle($arr);
var_dump($arr);
?>

<!--Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке.-->

<?php
$arr = range(1, 25);
shuffle($arr);
print_r($arr);
?>

<!--Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись. -->
<?php
$arr = range('a', 'z');
shuffle($arr);
var_dump($arr);
?>
<!--Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. Буквы не должны повторяться. -->

<?php
$arr = range('a', 'z');
$rand_keys = array_rand($arr, 6);
$string = '';
foreach ($rand_keys as $key => $elem) {
    $string .= $arr[$elem];
}
print_r($string);
?>

<!--Работа с array_unique -->
<!--Дан массив:$arr = ['a', 'b', 'c', 'b', 'a'];Удалите из этого массива повторяющиеся элементы. -->

<?php
$arr = ['a', 'b', 'c', 'b', 'a'];
print_r(array_unique($arr));
?>

<!--Начало и конец массива.Изучите теорию по следующим ссылкам:array_shift array_pop array_unshift array_push -->
<!--Дан массив:$arr = [1, 2, 3, 4, 5];Выведите на экран его первый и последний элемент, причем так, чтобы в исходном массиве они исчезли. -->

<?php
$arr = [1, 2, 3, 4, 5];
echo array_shift($arr) . ' - ' . array_pop($arr);
?>

<!--Дан массив:$arr = [1, 2, 3, 4, 5];Добавьте ему в начало элемент 0, а в конец - элемент 6. -->

<?php
$arr = [1, 2, 3, 4, 5];
array_unshift($arr, 0);
array_push($arr, 6);
print_r($arr);
?>

<!-- Заполнение массива.Изучите теорию по следующим ссылкам:array_pad array_fill array_fill_keys-->
<!-- Дан массив: $arr = ['a', 'b', 'c'];Сделайте из него следующий массив:['a', 'b', 'c', '-', '-', '-']-->

<?php
$arr = ['a', 'b', 'c'];
var_dump(array_pad($arr, 6, '-'));

?>

<!-- Заполните массив 10-ю буквами 'x'.-->

<?php
var_dump(array_fill(0, 10, 'x'));
?>

<!--Работа с array_chunk.Изучите теорию по следующим ссылкам:array_chunk -->
<!--Создайте массив, заполненный целыми числами от 1 до 25. С помощью функции array_chunk разбейте этот массив на 5 подмассивов по пять элементов в каждом. -->

<?php
$arr = range(1, 25);
var_dump(array_chunk($arr, 5));
?>

<!-- Работа с array_count_values.Изучите теорию по следующим ссылкам:array_count_values-->
<!-- Дан массив:$arr = ['a', 'b', 'c', 'b', 'a'];Подсчитайте сколько раз встречается каждая из букв.-->

<?php
$arr = ['a', 'b', 'c', 'b', 'a'];
var_dump(array_count_values($arr));
?>

<!-- Работа с array_map-->
<!--Изучите теорию по следующим ссылкам:array_map -->
<!--Дан массив: $arr = [1, 2, 3, 4, 5];Создайте новый массив, в котором будут лежать квадратные корни данных элементов. -->

<?php
$arr = [1, 2, 3, 4, 5];
$new_array = array_map('sqrt', $arr);
print_r($new_array);
?>

<!-- Работа с array_intersect, array_diff-->
<!--Изучите теорию по следующим ссылкам:array_intersect array_diff -->
<!--Дан массив: $arr1 = [1, 2, 3, 4, 5];
	$arr2 = [3, 4, 5, 6, 7];Запишите в новый массив элементы, которые есть и в том, и в другом массиве. -->

<?php
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$res = array_intersect($arr1, $arr2);
var_dump($res);
?>

<!--Дан массив:$arr1 = [1, 2, 3, 4, 5];
	$arr2 = [3, 4, 5, 6, 7];Запишите в новый массив элементы, которые не присутствуют в обоих массивах одновременно. -->

<?php
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$res = array_diff($arr1, $arr2);
print_r($res);
?>



